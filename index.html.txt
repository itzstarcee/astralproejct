<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Farans DM</title>
  <style>
    body {
      margin: 0;
      font-family: 'Segoe UI', sans-serif;
      display: flex;
      height: 100vh;
      background-color: #202225;
      color: #dcddde;
    }

    .sidebar {
      width: 250px;
      background-color: #2f3136;
      padding: 20px;
      box-sizing: border-box;
      display: flex;
      flex-direction: column;
    }

    .sidebar h2 {
      margin-bottom: 10px;
      color: #ffffff;
    }

    .section-title {
      margin-top: 20px;
      font-size: 14px;
      color: #b9bbbe;
    }

    .dm-controls input {
      width: 100%;
      margin-bottom: 10px;
      padding: 10px;
      border: none;
      border-radius: 6px;
      background-color: #40444b;
      color: white;
    }

    .dm-controls button {
      padding: 10px;
      border: none;
      border-radius: 6px;
      background-color: #7289da;
      color: white;
      font-weight: bold;
      cursor: pointer;
    }

    .dm-controls button:hover {
      background-color: #5b6eae;
    }

    .dm-list {
      margin-top: 10px;
    }

    .dm-item {
      padding: 8px;
      margin-bottom: 5px;
      background-color: #36393f;
      border-radius: 5px;
      cursor: pointer;
    }

    .dm-item:hover {
      background-color: #7289da;
    }

    .chat {
      flex: 1;
      display: flex;
      flex-direction: column;
      padding: 20px;
      box-sizing: border-box;
    }

    .messages {
      flex: 1;
      overflow-y: auto;
      background-color: #2f3136;
      padding: 15px;
      border-radius: 8px;
      margin-bottom: 15px;
    }

    .message {
      margin-bottom: 12px;
      padding: 8px 12px;
      background-color: #40444b;
      border-radius: 5px;
    }

    .message span {
      font-weight: bold;
      color: #7289da;
      margin-right: 6px;
    }

    .input-area {
      display: flex;
      gap: 10px;
    }

    .input-area input {
      flex: 1;
      padding: 10px;
      border: none;
      border-radius: 6px;
      background-color: #40444b;
      color: white;
    }

    .input-area input::placeholder {
      color: #b9bbbe;
    }

    .input-area button {
      padding: 10px;
      border: none;
      border-radius: 6px;
      background-color: #7289da;
      color: white;
      font-weight: bold;
      cursor: pointer;
    }

    .input-area button:hover {
      background-color: #5b6eae;
    }

    .active-mode {
      margin-bottom: 10px;
      font-size: 14px;
      color: #43b581;
    }
  </style>
</head>
<body>
  <div class="sidebar">
    <h2>Farans</h2>
    <div class="section-title">Your ID</div>
    <div class="dm-item" style="cursor:default;">Anonymous: (<span id="userId"></span>)</div>

    <div class="section-title">Start DM</div>
    <div class="dm-controls">
      <input type="text" id="dmTargetId" placeholder="Enter user ID to DM" />
      <button onclick="startDM()">Start DM</button>
    </div>

    <div class="section-title">People Messaging You</div>
    <div id="dmList" class="dm-list"></div>
  </div>

  <div class="chat">
    <div class="active-mode" id="activeModeLabel">No DM selected</div>
    <div class="messages" id="messages"></div>
    <div class="input-area">
      <input type="text" id="messageInput" placeholder="Send a message..." />
      <button onclick="sendMessage()">Send</button>
    </div>
  </div>

  <script>
    const userId = Math.floor(1000 + Math.random() * 9000);
    document.getElementById('userId').textContent = userId;
    let currentDM = null;

    function getDMKey(id1, id2) {
      const sorted = [id1, id2].sort();
      return `dm_${sorted[0]}_${sorted[1]}`;
    }

    function startDM() {
      const targetId = document.getElementById('dmTargetId').value.trim();
      if (!targetId || isNaN(targetId)) return;
      currentDM = targetId;
      renderMessages();
      updateModeLabel();
      document.getElementById('dmTargetId').value = '';
    }

    function renderMessages() {
      const container = document.getElementById('messages');
      container.innerHTML = '';
      if (!currentDM) return;

      const key = getDMKey(userId, currentDM);
      const msgs = JSON.parse(localStorage.getItem(key) || '[]');

      for (const msg of msgs) {
        const div = document.createElement('div');
        div.className = 'message';
        div.innerHTML = `<span>Anonymous:</span> ${msg.sender === userId ? msg.text : msg.text}`;
        container.appendChild(div);
      }
      container.scrollTop = container.scrollHeight;
    }

    function sendMessage() {
      const input = document.getElementById('messageInput');
      const text = input.value.trim();
      if (!text || !currentDM) return;

      const key = getDMKey(userId, currentDM);
      const msgs = JSON.parse(localStorage.getItem(key) || '[]');
      msgs.push({ sender: userId, text });
      localStorage.setItem(key, JSON.stringify(msgs));

      updateDMList(currentDM);
      input.value = '';
      renderMessages();
    }

    function updateModeLabel() {
      const label = document.getElementById('activeModeLabel');
      label.textContent = `DM with Anonymous (${currentDM})`;
    }

    function updateDMList(fromId) {
      const list = document.getElementById('dmList');
      const existing = Array.from(list.children).map(el => el.dataset.id);
      if (existing.includes(fromId)) return;

      const item = document.createElement('div');
      item.className = 'dm-item';
      item.textContent = `Anonymous (${fromId})`;
      item.dataset.id = fromId;
      item.onclick = () => {
        currentDM = fromId;
        renderMessages();
        updateModeLabel();
      };
      list.appendChild(item);
    }

    document.getElementById('messageInput').addEventListener('keydown', function(e) {
      if (e.key === 'Enter') {
        e.preventDefault();
        sendMessage();
      }
    });
  </script>
</body>
</html>
